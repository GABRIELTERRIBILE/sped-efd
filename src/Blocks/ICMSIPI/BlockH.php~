<?php

namespace NFePHP\EFD\Blocks\ICMSIPI;

use NFePHP\EFD\Elements\ICMSIPI as Elements;
use NFePHP\EFD\Common\Block;
use NFePHP\EFD\Common\BlockInterface;

/**
 * Classe constutora do bloco H
 *
 * Esta classe irÃ¡ usar um recurso para invocar as classes de cada um dos elementos
 * constituintes listados
 *
 * @method Elements\H001 h001(\stdClass $std) Constructor element H001
 * @method Elements\H005 h005(\stdClass $std) Constructor element H005
 * @method Elements\H010 h010(\stdClass $std) Constructor element H010
 * @method Elements\H020 h020(\stdClass $std) Constructor element H020
 */
final class BlockH extends Block implements BlockInterface
{
    const TOTAL = 'H990';
public $regversion;
public $fieldorder = [
'H001' => [0 => [1 => 'REG',2=>'IND_MOV']]
'H005' => [0 => [1 => 'REG',2=>'DT_INV',3=>'VL_INV',4=>'MOT_INV']]
'H010' => [0 => [1 => 'REG',2=>'COD_ITEM',3=>'UNID',4=>'QTD',5=>'VL_UNIT',6=>'VL_ITEM',7=>'IND_PROP',8=>'COD_PART',9=>'TXT_COMPL',10=>'COD_CTA',11=>'VL_ITEM_IR']]
'H020' => [0 => [1 => 'REG',2=>'CST_ICMS',3=>'BC_ICMS',4=>'VL_ICMS']]
'H990' => [0 => [1 => 'REG',2=>'QTD_LIN_H']]
];

    public $elements = [
        'h001' => ['class' => Elements\H001::class, 'level' => 1, 'type' => 'single'],
        'h005' => ['class' => Elements\H005::class, 'level' => 2, 'type' => 'single'],
        'h010' => ['class' => Elements\H010::class, 'level' => 3, 'type' => 'multiple'],
        'h020' => ['class' => Elements\H020::class, 'level' => 4, 'type' => 'multiple'],
    ];
    
    public function __construct($version='')
    {
        parent::__construct(self::TOTAL);
        if ($version!='') {
            switch ($version) {
               case '013': $this->regversion = ['H001'=>0,'H005'=>0,'H010'=>0,'H020'=>0,'H990'=>0];
                   break;
               default: $this->regversion = ['H001'=>0,'H005'=>0,'H010'=>0,'H020'=>0,'H990'=>0];
                   break;
           }
        }
    }
}
